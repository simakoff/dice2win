// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FailedPayment extends ethereum.Event {
  get params(): FailedPayment__Params {
    return new FailedPayment__Params(this);
  }
}

export class FailedPayment__Params {
  _event: FailedPayment;

  constructor(event: FailedPayment) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Payment extends ethereum.Event {
  get params(): Payment__Params {
    return new Payment__Params(this);
  }
}

export class Payment__Params {
  _event: Payment;

  constructor(event: Payment) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class JackpotPayment extends ethereum.Event {
  get params(): JackpotPayment__Params {
    return new JackpotPayment__Params(this);
  }
}

export class JackpotPayment__Params {
  _event: JackpotPayment;

  constructor(event: JackpotPayment) {
    this._event = event;
  }

  get beneficiary(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Commit extends ethereum.Event {
  get params(): Commit__Params {
    return new Commit__Params(this);
  }
}

export class Commit__Params {
  _event: Commit;

  constructor(event: Commit) {
    this._event = event;
  }

  get commit(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Dice2Win extends ethereum.SmartContract {
  static bind(address: Address): Dice2Win {
    return new Dice2Win("Dice2Win", address);
  }

  secretSigner(): Address {
    let result = super.call("secretSigner", "secretSigner():(address)", []);

    return result[0].toAddress();
  }

  try_secretSigner(): ethereum.CallResult<Address> {
    let result = super.tryCall("secretSigner", "secretSigner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  jackpotSize(): BigInt {
    let result = super.call("jackpotSize", "jackpotSize():(uint128)", []);

    return result[0].toBigInt();
  }

  try_jackpotSize(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("jackpotSize", "jackpotSize():(uint128)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  croupier(): Address {
    let result = super.call("croupier", "croupier():(address)", []);

    return result[0].toAddress();
  }

  try_croupier(): ethereum.CallResult<Address> {
    let result = super.tryCall("croupier", "croupier():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  maxProfit(): BigInt {
    let result = super.call("maxProfit", "maxProfit():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxProfit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxProfit", "maxProfit():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lockedInBets(): BigInt {
    let result = super.call("lockedInBets", "lockedInBets():(uint128)", []);

    return result[0].toBigInt();
  }

  try_lockedInBets(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("lockedInBets", "lockedInBets():(uint128)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class KillCall extends ethereum.Call {
  get inputs(): KillCall__Inputs {
    return new KillCall__Inputs(this);
  }

  get outputs(): KillCall__Outputs {
    return new KillCall__Outputs(this);
  }
}

export class KillCall__Inputs {
  _call: KillCall;

  constructor(call: KillCall) {
    this._call = call;
  }
}

export class KillCall__Outputs {
  _call: KillCall;

  constructor(call: KillCall) {
    this._call = call;
  }
}

export class PlaceBetCall extends ethereum.Call {
  get inputs(): PlaceBetCall__Inputs {
    return new PlaceBetCall__Inputs(this);
  }

  get outputs(): PlaceBetCall__Outputs {
    return new PlaceBetCall__Outputs(this);
  }
}

export class PlaceBetCall__Inputs {
  _call: PlaceBetCall;

  constructor(call: PlaceBetCall) {
    this._call = call;
  }

  get betMask(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get modulo(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get commitLastBlock(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get commit(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get r(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class PlaceBetCall__Outputs {
  _call: PlaceBetCall;

  constructor(call: PlaceBetCall) {
    this._call = call;
  }
}

export class SettleBetUncleMerkleProofCall extends ethereum.Call {
  get inputs(): SettleBetUncleMerkleProofCall__Inputs {
    return new SettleBetUncleMerkleProofCall__Inputs(this);
  }

  get outputs(): SettleBetUncleMerkleProofCall__Outputs {
    return new SettleBetUncleMerkleProofCall__Outputs(this);
  }
}

export class SettleBetUncleMerkleProofCall__Inputs {
  _call: SettleBetUncleMerkleProofCall;

  constructor(call: SettleBetUncleMerkleProofCall) {
    this._call = call;
  }

  get reveal(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get canonicalBlockNumber(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SettleBetUncleMerkleProofCall__Outputs {
  _call: SettleBetUncleMerkleProofCall;

  constructor(call: SettleBetUncleMerkleProofCall) {
    this._call = call;
  }
}

export class WithdrawFundsCall extends ethereum.Call {
  get inputs(): WithdrawFundsCall__Inputs {
    return new WithdrawFundsCall__Inputs(this);
  }

  get outputs(): WithdrawFundsCall__Outputs {
    return new WithdrawFundsCall__Outputs(this);
  }
}

export class WithdrawFundsCall__Inputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }

  get beneficiary(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get withdrawAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawFundsCall__Outputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }
}

export class SettleBetCall extends ethereum.Call {
  get inputs(): SettleBetCall__Inputs {
    return new SettleBetCall__Inputs(this);
  }

  get outputs(): SettleBetCall__Outputs {
    return new SettleBetCall__Outputs(this);
  }
}

export class SettleBetCall__Inputs {
  _call: SettleBetCall;

  constructor(call: SettleBetCall) {
    this._call = call;
  }

  get reveal(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get blockHash(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SettleBetCall__Outputs {
  _call: SettleBetCall;

  constructor(call: SettleBetCall) {
    this._call = call;
  }
}

export class AcceptNextOwnerCall extends ethereum.Call {
  get inputs(): AcceptNextOwnerCall__Inputs {
    return new AcceptNextOwnerCall__Inputs(this);
  }

  get outputs(): AcceptNextOwnerCall__Outputs {
    return new AcceptNextOwnerCall__Outputs(this);
  }
}

export class AcceptNextOwnerCall__Inputs {
  _call: AcceptNextOwnerCall;

  constructor(call: AcceptNextOwnerCall) {
    this._call = call;
  }
}

export class AcceptNextOwnerCall__Outputs {
  _call: AcceptNextOwnerCall;

  constructor(call: AcceptNextOwnerCall) {
    this._call = call;
  }
}

export class ApproveNextOwnerCall extends ethereum.Call {
  get inputs(): ApproveNextOwnerCall__Inputs {
    return new ApproveNextOwnerCall__Inputs(this);
  }

  get outputs(): ApproveNextOwnerCall__Outputs {
    return new ApproveNextOwnerCall__Outputs(this);
  }
}

export class ApproveNextOwnerCall__Inputs {
  _call: ApproveNextOwnerCall;

  constructor(call: ApproveNextOwnerCall) {
    this._call = call;
  }

  get _nextOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ApproveNextOwnerCall__Outputs {
  _call: ApproveNextOwnerCall;

  constructor(call: ApproveNextOwnerCall) {
    this._call = call;
  }
}

export class IncreaseJackpotCall extends ethereum.Call {
  get inputs(): IncreaseJackpotCall__Inputs {
    return new IncreaseJackpotCall__Inputs(this);
  }

  get outputs(): IncreaseJackpotCall__Outputs {
    return new IncreaseJackpotCall__Outputs(this);
  }
}

export class IncreaseJackpotCall__Inputs {
  _call: IncreaseJackpotCall;

  constructor(call: IncreaseJackpotCall) {
    this._call = call;
  }

  get increaseAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class IncreaseJackpotCall__Outputs {
  _call: IncreaseJackpotCall;

  constructor(call: IncreaseJackpotCall) {
    this._call = call;
  }
}

export class SetSecretSignerCall extends ethereum.Call {
  get inputs(): SetSecretSignerCall__Inputs {
    return new SetSecretSignerCall__Inputs(this);
  }

  get outputs(): SetSecretSignerCall__Outputs {
    return new SetSecretSignerCall__Outputs(this);
  }
}

export class SetSecretSignerCall__Inputs {
  _call: SetSecretSignerCall;

  constructor(call: SetSecretSignerCall) {
    this._call = call;
  }

  get newSecretSigner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSecretSignerCall__Outputs {
  _call: SetSecretSignerCall;

  constructor(call: SetSecretSignerCall) {
    this._call = call;
  }
}

export class RefundBetCall extends ethereum.Call {
  get inputs(): RefundBetCall__Inputs {
    return new RefundBetCall__Inputs(this);
  }

  get outputs(): RefundBetCall__Outputs {
    return new RefundBetCall__Outputs(this);
  }
}

export class RefundBetCall__Inputs {
  _call: RefundBetCall;

  constructor(call: RefundBetCall) {
    this._call = call;
  }

  get commit(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RefundBetCall__Outputs {
  _call: RefundBetCall;

  constructor(call: RefundBetCall) {
    this._call = call;
  }
}

export class SetCroupierCall extends ethereum.Call {
  get inputs(): SetCroupierCall__Inputs {
    return new SetCroupierCall__Inputs(this);
  }

  get outputs(): SetCroupierCall__Outputs {
    return new SetCroupierCall__Outputs(this);
  }
}

export class SetCroupierCall__Inputs {
  _call: SetCroupierCall;

  constructor(call: SetCroupierCall) {
    this._call = call;
  }

  get newCroupier(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetCroupierCall__Outputs {
  _call: SetCroupierCall;

  constructor(call: SetCroupierCall) {
    this._call = call;
  }
}

export class SetMaxProfitCall extends ethereum.Call {
  get inputs(): SetMaxProfitCall__Inputs {
    return new SetMaxProfitCall__Inputs(this);
  }

  get outputs(): SetMaxProfitCall__Outputs {
    return new SetMaxProfitCall__Outputs(this);
  }
}

export class SetMaxProfitCall__Inputs {
  _call: SetMaxProfitCall;

  constructor(call: SetMaxProfitCall) {
    this._call = call;
  }

  get _maxProfit(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxProfitCall__Outputs {
  _call: SetMaxProfitCall;

  constructor(call: SetMaxProfitCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}
